# simple_setup_fixed.py - UNICODE SAFE VERSION
"""
Simple Setup for Creative Engine - Unicode Safe
"""

import os
from pathlib import Path

def setup_simple_creative():
    """Setup basic creative environment without complex dependencies"""
    print("🎨 SIMPLE CREATIVE SETUP - UNICODE SAFE VERSION")
    print("=" * 60)
    print("Setting up basic creative environment...")
    print()
    
    # Create directories
    print("📁 Creating directories...")
    directories = [
        "templates",
        "creative_output", 
        "assets"
    ]
    
    for directory in directories:
        Path(directory).mkdir(exist_ok=True)
        print(f"✅ Created: {directory}/")
    
    # Create sample files
    print("\n📝 Creating sample templates...")
    
    # Architecture template (ASCII safe)
    arch_template = """# System Architecture Template

## Components:
- Frontend: User Interface (React/Angular)
- API Gateway: Request routing and auth
- Backend Services: Business logic
- Database: Data persistence
- Cache: Performance layer

## Flow:
User -> Frontend -> API Gateway -> Backend -> Database

## Notes:
- Scalable microservices architecture
- Cloud-native design principles
- Security and monitoring included
"""
    
    with open("templates/architecture.md", "w", encoding='utf-8') as f:
        f.write(arch_template)
    
    # Presentation template
    pres_template = """# Business Presentation Template

## Slide 1: Title
- Project Name
- Presenter
- Date

## Slide 2: Problem
- Current challenges
- Impact and cost

## Slide 3: Solution
- Proposed approach
- Key benefits

## Slide 4: Implementation
- Timeline
- Resources needed

## Slide 5: Next Steps
- Action items
- Decision points
"""
    
    with open("templates/presentation.md", "w", encoding='utf-8') as f:
        f.write(pres_template)
    
    print("✅ Created sample templates")
    
    # Test creative capabilities
    print("\n🧪 Testing basic capabilities...")
    
    # Create test output (ASCII safe)
    test_output = """
================================================================
                    TEST ARCHITECTURE DIAGRAM                  
================================================================

COMPONENTS:
----------------------------------------------------------------
 1. Frontend (frontend)
 2. API Gateway (middleware)  
 3. Backend (backend)
 4. Database (storage)

CONNECTIONS:
----------------------------------------------------------------
   Frontend --> API Gateway
   API Gateway --> Backend
   Backend --> Database

LAYOUT: hierarchical
GENERATED: 2025-08-20 06:15:00
TYPE: ARCHITECTURE

================================================================
Generated by Rudh Creative Engine V4.1
Advanced AI-Powered Content Creation
================================================================
"""
    
    test_file = Path("creative_output/test_diagram.txt")
    with open(test_file, "w", encoding='utf-8') as f:
        f.write(test_output)
    
    print(f"✅ Created test diagram: {test_file}")
    
    # Check what we have
    print("\n📊 Environment Status:")
    print("=" * 40)
    
    # Check Python libraries
    libs_status = {}
    required_libs = ["matplotlib", "PIL"]
    
    for lib in required_libs:
        try:
            __import__(lib)
            libs_status[lib] = "✅ Available"
        except ImportError:
            libs_status[lib] = "❌ Not installed"
    
    for lib, status in libs_status.items():
        print(f"   {lib}: {status}")
    
    # Show what works
    print("\n🎯 What Works Right Now:")
    print("=" * 40)
    print("✅ Text-based diagrams (always works)")
    print("✅ Business content generation")
    print("✅ Template system")
    print("✅ File organization")
    print("✅ AI-powered content structuring")
    
    if libs_status["matplotlib"] == "✅ Available":
        print("✅ Visual diagrams (matplotlib)")
    else:
        print("⚠️ Visual diagrams (install matplotlib for graphics)")
    
    print("\n🚀 Ready to Test:")
    print("=" * 40)
    print("1. python creative_engine_working.py")
    print("2. Try creating diagrams and content!")
    print()
    print("🎉 Simple creative setup complete!")
    print("💡 Text-based diagrams work perfectly!")

if __name__ == "__main__":
    setup_simple_creative()